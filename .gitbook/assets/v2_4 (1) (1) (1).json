{
    "swagger": "2.0",
    "info": {
        "version": "",
        "title": "Elide Service"
    },
    "basePath": "/api/v1",
    "tags": [
        {
            "name": "step"
        },
        {
            "name": "provider"
        },
        {
            "name": "schedule"
        },
        {
            "name": "variable"
        },
        {
            "name": "version"
        },
        {
            "name": "team"
        },
        {
            "name": "vcs"
        },
        {
            "name": "globalvar"
        },
        {
            "name": "implementation"
        },
        {
            "name": "workspace"
        },
        {
            "name": "job"
        },
        {
            "name": "module"
        },
        {
            "name": "template"
        },
        {
            "name": "organization"
        },
        {
            "name": "history"
        }
    ],
    "paths": {
        "/template/{templateId}/organization": {
            "get": {
                "tags": [
                    "organization"
                ],
                "description": "Returns the relationship organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "description",
                                "-description",
                                "disabled",
                                "-disabled",
                                "name",
                                "-name",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[organization]",
                        "in": "query",
                        "description": "Selects the set of organization fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "description",
                                "disabled",
                                "name",
                                "globalvar",
                                "job",
                                "module",
                                "provider",
                                "team",
                                "template",
                                "vcs",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "globalvar",
                                "job",
                                "module",
                                "provider",
                                "team",
                                "template",
                                "vcs",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[organization]",
                        "in": "query",
                        "description": "Filters the collection of organization using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/organization"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "organization"
                ],
                "description": "Creates an item of type organization and adds it to organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "organization",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/organization"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/organization"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "templateId",
                    "in": "path",
                    "description": "template Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/template/{templateId}/organization/{organizationId}": {
            "get": {
                "tags": [
                    "organization"
                ],
                "description": "Returns an instance of type organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[organization]",
                        "in": "query",
                        "description": "Selects the set of organization fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "description",
                                "disabled",
                                "name",
                                "globalvar",
                                "job",
                                "module",
                                "provider",
                                "team",
                                "template",
                                "vcs",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "globalvar",
                                "job",
                                "module",
                                "provider",
                                "team",
                                "template",
                                "vcs",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/organization"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "organization"
                ],
                "description": "Deletes an instance of type organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "organization"
                ],
                "description": "Modifies an instance of type organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "organization",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/organization"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "templateId",
                    "in": "path",
                    "description": "template Identifier",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/template/{templateId}/relationships/organization": {
            "get": {
                "tags": [
                    "organization"
                ],
                "description": "Returns the relationship identifiers for organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "filter[organization]",
                        "in": "query",
                        "description": "Filters the collection of organization using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "organization"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "organization"
                ],
                "description": "Replaces the relationship organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "organization"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "templateId",
                    "in": "path",
                    "description": "template Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/implementation/{implementationId}/version": {
            "get": {
                "tags": [
                    "version"
                ],
                "description": "Returns the relationship version",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "protocols",
                                "-protocols",
                                "versionNumber",
                                "-versionNumber",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[version]",
                        "in": "query",
                        "description": "Selects the set of version fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "protocols",
                                "versionNumber",
                                "implementation",
                                "provider"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "implementation",
                                "provider"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[version]",
                        "in": "query",
                        "description": "Filters the collection of version using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/version"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "version"
                ],
                "description": "Creates an item of type version and adds it to version",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "version",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/version"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/version"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "implementationId",
                    "in": "path",
                    "description": "implementation Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/implementation/{implementationId}/version/{versionId}": {
            "get": {
                "tags": [
                    "version"
                ],
                "description": "Returns an instance of type version",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[version]",
                        "in": "query",
                        "description": "Selects the set of version fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "protocols",
                                "versionNumber",
                                "implementation",
                                "provider"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "implementation",
                                "provider"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/version"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "version"
                ],
                "description": "Deletes an instance of type version",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "version"
                ],
                "description": "Modifies an instance of type version",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "version",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/version"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "implementationId",
                    "in": "path",
                    "description": "implementation Identifier",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "versionId",
                    "in": "path",
                    "description": "version Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/implementation/{implementationId}/relationships/version": {
            "get": {
                "tags": [
                    "version"
                ],
                "description": "Returns the relationship identifiers for version",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "filter[version]",
                        "in": "query",
                        "description": "Filters the collection of version using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "version"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "version"
                ],
                "description": "Replaces the relationship version",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "version"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "implementationId",
                    "in": "path",
                    "description": "implementation Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/organization": {
            "get": {
                "tags": [
                    "organization"
                ],
                "description": "Returns the relationship organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "description",
                                "-description",
                                "disabled",
                                "-disabled",
                                "name",
                                "-name",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[organization]",
                        "in": "query",
                        "description": "Selects the set of organization fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "description",
                                "disabled",
                                "name",
                                "globalvar",
                                "job",
                                "module",
                                "provider",
                                "team",
                                "template",
                                "vcs",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "globalvar",
                                "job",
                                "module",
                                "provider",
                                "team",
                                "template",
                                "vcs",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[organization]",
                        "in": "query",
                        "description": "Filters the collection of organization using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/organization"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "organization"
                ],
                "description": "Creates an item of type organization and adds it to organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "organization",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/organization"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/organization"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/organization/{organizationId}": {
            "get": {
                "tags": [
                    "organization"
                ],
                "description": "Returns an instance of type organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[organization]",
                        "in": "query",
                        "description": "Selects the set of organization fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "description",
                                "disabled",
                                "name",
                                "globalvar",
                                "job",
                                "module",
                                "provider",
                                "team",
                                "template",
                                "vcs",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "globalvar",
                                "job",
                                "module",
                                "provider",
                                "team",
                                "template",
                                "vcs",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/organization"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "organization"
                ],
                "description": "Deletes an instance of type organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "organization"
                ],
                "description": "Modifies an instance of type organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "organization",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/organization"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/relationships/organization": {
            "get": {
                "tags": [
                    "organization"
                ],
                "description": "Returns the relationship identifiers for organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "filter[organization]",
                        "in": "query",
                        "description": "Filters the collection of organization using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "organization"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "organization"
                ],
                "description": "Replaces the relationship organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "organization"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/vcs": {
            "get": {
                "tags": [
                    "vcs"
                ],
                "description": "Returns the relationship vcs",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "clientId",
                                "-clientId",
                                "clientSecret",
                                "-clientSecret",
                                "createdBy",
                                "-createdBy",
                                "description",
                                "-description",
                                "name",
                                "-name",
                                "updatedBy",
                                "-updatedBy",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[vcs]",
                        "in": "query",
                        "description": "Selects the set of vcs fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "clientId",
                                "clientSecret",
                                "createdBy",
                                "createdDate",
                                "description",
                                "name",
                                "status",
                                "updatedBy",
                                "updatedDate",
                                "vcsType",
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[vcs]",
                        "in": "query",
                        "description": "Filters the collection of vcs using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/vcs"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "vcs"
                ],
                "description": "Creates an item of type vcs and adds it to vcs",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vcs",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/vcs"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/vcs"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/vcs/{vcsId}": {
            "get": {
                "tags": [
                    "vcs"
                ],
                "description": "Returns an instance of type vcs",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[vcs]",
                        "in": "query",
                        "description": "Selects the set of vcs fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "clientId",
                                "clientSecret",
                                "createdBy",
                                "createdDate",
                                "description",
                                "name",
                                "status",
                                "updatedBy",
                                "updatedDate",
                                "vcsType",
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/vcs"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "vcs"
                ],
                "description": "Deletes an instance of type vcs",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "vcs"
                ],
                "description": "Modifies an instance of type vcs",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vcs",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/vcs"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "vcsId",
                    "in": "path",
                    "description": "vcs Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/relationships/vcs": {
            "get": {
                "tags": [
                    "vcs"
                ],
                "description": "Returns the relationship identifiers for vcs",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "filter[vcs]",
                        "in": "query",
                        "description": "Filters the collection of vcs using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "vcs"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "vcs"
                ],
                "description": "Replaces the relationship vcs",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "vcs"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/workspace": {
            "get": {
                "tags": [
                    "workspace"
                ],
                "description": "Returns the relationship workspace",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "branch",
                                "-branch",
                                "description",
                                "-description",
                                "name",
                                "-name",
                                "source",
                                "-source",
                                "terraformVersion",
                                "-terraformVersion",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[workspace]",
                        "in": "query",
                        "description": "Selects the set of workspace fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "branch",
                                "description",
                                "name",
                                "source",
                                "terraformVersion",
                                "history",
                                "job",
                                "organization",
                                "schedule",
                                "variable",
                                "vcs"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "history",
                                "job",
                                "organization",
                                "schedule",
                                "variable",
                                "vcs"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[workspace]",
                        "in": "query",
                        "description": "Filters the collection of workspace using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/workspace"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "workspace"
                ],
                "description": "Creates an item of type workspace and adds it to workspace",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "workspace",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/workspace"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/workspace"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/workspace/{workspaceId}": {
            "get": {
                "tags": [
                    "workspace"
                ],
                "description": "Returns an instance of type workspace",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[workspace]",
                        "in": "query",
                        "description": "Selects the set of workspace fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "branch",
                                "description",
                                "name",
                                "source",
                                "terraformVersion",
                                "history",
                                "job",
                                "organization",
                                "schedule",
                                "variable",
                                "vcs"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "history",
                                "job",
                                "organization",
                                "schedule",
                                "variable",
                                "vcs"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/workspace"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "workspace"
                ],
                "description": "Deletes an instance of type workspace",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "workspace"
                ],
                "description": "Modifies an instance of type workspace",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "workspace",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/workspace"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/relationships/workspace": {
            "get": {
                "tags": [
                    "workspace"
                ],
                "description": "Returns the relationship identifiers for workspace",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "filter[workspace]",
                        "in": "query",
                        "description": "Filters the collection of workspace using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "workspace"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "workspace"
                ],
                "description": "Adds items to the relationship workspace",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "workspace"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "workspace"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "workspace"
                ],
                "description": "Deletes items from the relationship workspace",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "workspace"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "workspace"
                ],
                "description": "Replaces the relationship workspace",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "workspace"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace": {
            "get": {
                "tags": [
                    "workspace"
                ],
                "description": "Returns the collection of type workspace",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "branch",
                                "-branch",
                                "description",
                                "-description",
                                "name",
                                "-name",
                                "source",
                                "-source",
                                "terraformVersion",
                                "-terraformVersion",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[workspace]",
                        "in": "query",
                        "description": "Selects the set of workspace fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "branch",
                                "description",
                                "name",
                                "source",
                                "terraformVersion",
                                "history",
                                "job",
                                "organization",
                                "schedule",
                                "variable",
                                "vcs"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "history",
                                "job",
                                "organization",
                                "schedule",
                                "variable",
                                "vcs"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[workspace]",
                        "in": "query",
                        "description": "Filters the collection of workspace using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filters the collection of workspace using a 'joined' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/workspace"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "workspace"
                ],
                "description": "Creates an item of type workspace",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "workspace",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/workspace"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/workspace"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspace/{workspaceId}": {
            "get": {
                "tags": [
                    "workspace"
                ],
                "description": "Returns an instance of type workspace",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[workspace]",
                        "in": "query",
                        "description": "Selects the set of workspace fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "branch",
                                "description",
                                "name",
                                "source",
                                "terraformVersion",
                                "history",
                                "job",
                                "organization",
                                "schedule",
                                "variable",
                                "vcs"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "history",
                                "job",
                                "organization",
                                "schedule",
                                "variable",
                                "vcs"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/workspace"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "workspace"
                ],
                "description": "Deletes an instance of type workspace",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "workspace"
                ],
                "description": "Modifies an instance of type workspace",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "workspace",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/workspace"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/job": {
            "get": {
                "tags": [
                    "job"
                ],
                "description": "Returns the relationship job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "approvalTeam",
                                "-approvalTeam",
                                "comments",
                                "-comments",
                                "createdBy",
                                "-createdBy",
                                "output",
                                "-output",
                                "tcl",
                                "-tcl",
                                "templateReference",
                                "-templateReference",
                                "terraformPlan",
                                "-terraformPlan",
                                "updatedBy",
                                "-updatedBy",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[job]",
                        "in": "query",
                        "description": "Selects the set of job fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "approvalTeam",
                                "comments",
                                "createdBy",
                                "createdDate",
                                "output",
                                "status",
                                "tcl",
                                "templateReference",
                                "terraformPlan",
                                "updatedBy",
                                "updatedDate",
                                "organization",
                                "step",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization",
                                "step",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[job]",
                        "in": "query",
                        "description": "Filters the collection of job using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/job"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "job"
                ],
                "description": "Creates an item of type job and adds it to job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "job",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/job"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/job"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/job/{jobId}": {
            "get": {
                "tags": [
                    "job"
                ],
                "description": "Returns an instance of type job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[job]",
                        "in": "query",
                        "description": "Selects the set of job fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "approvalTeam",
                                "comments",
                                "createdBy",
                                "createdDate",
                                "output",
                                "status",
                                "tcl",
                                "templateReference",
                                "terraformPlan",
                                "updatedBy",
                                "updatedDate",
                                "organization",
                                "step",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization",
                                "step",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/job"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "job"
                ],
                "description": "Deletes an instance of type job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "job"
                ],
                "description": "Modifies an instance of type job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "job",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/job"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "jobId",
                    "in": "path",
                    "description": "job Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/relationships/job": {
            "get": {
                "tags": [
                    "job"
                ],
                "description": "Returns the relationship identifiers for job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "filter[job]",
                        "in": "query",
                        "description": "Filters the collection of job using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "job"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "job"
                ],
                "description": "Adds items to the relationship job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "job"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "job"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "job"
                ],
                "description": "Deletes items from the relationship job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "job"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "job"
                ],
                "description": "Replaces the relationship job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "job"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/provider": {
            "get": {
                "tags": [
                    "provider"
                ],
                "description": "Returns the relationship provider",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "description",
                                "-description",
                                "name",
                                "-name",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[provider]",
                        "in": "query",
                        "description": "Selects the set of provider fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "description",
                                "name",
                                "organization",
                                "version"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization",
                                "version"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[provider]",
                        "in": "query",
                        "description": "Filters the collection of provider using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/provider"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "provider"
                ],
                "description": "Creates an item of type provider and adds it to provider",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "provider",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/provider"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/provider"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/provider/{providerId}": {
            "get": {
                "tags": [
                    "provider"
                ],
                "description": "Returns an instance of type provider",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[provider]",
                        "in": "query",
                        "description": "Selects the set of provider fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "description",
                                "name",
                                "organization",
                                "version"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization",
                                "version"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/provider"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "provider"
                ],
                "description": "Deletes an instance of type provider",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "provider"
                ],
                "description": "Modifies an instance of type provider",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "provider",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/provider"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "providerId",
                    "in": "path",
                    "description": "provider Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/relationships/provider": {
            "get": {
                "tags": [
                    "provider"
                ],
                "description": "Returns the relationship identifiers for provider",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "filter[provider]",
                        "in": "query",
                        "description": "Filters the collection of provider using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "provider"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "provider"
                ],
                "description": "Adds items to the relationship provider",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "provider"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "provider"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "provider"
                ],
                "description": "Deletes items from the relationship provider",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "provider"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "provider"
                ],
                "description": "Replaces the relationship provider",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "provider"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/template": {
            "get": {
                "tags": [
                    "template"
                ],
                "description": "Returns the relationship template",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "createdBy",
                                "-createdBy",
                                "description",
                                "-description",
                                "name",
                                "-name",
                                "tcl",
                                "-tcl",
                                "updatedBy",
                                "-updatedBy",
                                "version",
                                "-version",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[template]",
                        "in": "query",
                        "description": "Selects the set of template fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "createdBy",
                                "createdDate",
                                "description",
                                "name",
                                "tcl",
                                "updatedBy",
                                "updatedDate",
                                "version",
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[template]",
                        "in": "query",
                        "description": "Filters the collection of template using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/template"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "template"
                ],
                "description": "Creates an item of type template and adds it to template",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "template",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/template"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/template"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/template/{templateId}": {
            "get": {
                "tags": [
                    "template"
                ],
                "description": "Returns an instance of type template",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[template]",
                        "in": "query",
                        "description": "Selects the set of template fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "createdBy",
                                "createdDate",
                                "description",
                                "name",
                                "tcl",
                                "updatedBy",
                                "updatedDate",
                                "version",
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/template"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "template"
                ],
                "description": "Deletes an instance of type template",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "template"
                ],
                "description": "Modifies an instance of type template",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "template",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/template"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "templateId",
                    "in": "path",
                    "description": "template Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/relationships/template": {
            "get": {
                "tags": [
                    "template"
                ],
                "description": "Returns the relationship identifiers for template",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "filter[template]",
                        "in": "query",
                        "description": "Filters the collection of template using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "template"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "template"
                ],
                "description": "Adds items to the relationship template",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "template"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "template"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "template"
                ],
                "description": "Deletes items from the relationship template",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "template"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "template"
                ],
                "description": "Replaces the relationship template",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "template"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/implementation": {
            "get": {
                "tags": [
                    "implementation"
                ],
                "description": "Returns the collection of type implementation",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "arch",
                                "-arch",
                                "asciiArmor",
                                "-asciiArmor",
                                "downloadUrl",
                                "-downloadUrl",
                                "filename",
                                "-filename",
                                "keyId",
                                "-keyId",
                                "os",
                                "-os",
                                "shasum",
                                "-shasum",
                                "shasumsSignatureUrl",
                                "-shasumsSignatureUrl",
                                "shasumsUrl",
                                "-shasumsUrl",
                                "source",
                                "-source",
                                "sourceUrl",
                                "-sourceUrl",
                                "trustSignature",
                                "-trustSignature",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[implementation]",
                        "in": "query",
                        "description": "Selects the set of implementation fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "arch",
                                "asciiArmor",
                                "downloadUrl",
                                "filename",
                                "keyId",
                                "os",
                                "shasum",
                                "shasumsSignatureUrl",
                                "shasumsUrl",
                                "source",
                                "sourceUrl",
                                "trustSignature",
                                "version"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "version"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[implementation]",
                        "in": "query",
                        "description": "Filters the collection of implementation using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filters the collection of implementation using a 'joined' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/implementation"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "implementation"
                ],
                "description": "Creates an item of type implementation",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "implementation",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/implementation"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/implementation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/implementation/{implementationId}": {
            "get": {
                "tags": [
                    "implementation"
                ],
                "description": "Returns an instance of type implementation",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[implementation]",
                        "in": "query",
                        "description": "Selects the set of implementation fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "arch",
                                "asciiArmor",
                                "downloadUrl",
                                "filename",
                                "keyId",
                                "os",
                                "shasum",
                                "shasumsSignatureUrl",
                                "shasumsUrl",
                                "source",
                                "sourceUrl",
                                "trustSignature",
                                "version"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "version"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/implementation"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "implementation"
                ],
                "description": "Deletes an instance of type implementation",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "implementation"
                ],
                "description": "Modifies an instance of type implementation",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "implementation",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/implementation"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "implementationId",
                    "in": "path",
                    "description": "implementation Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/template": {
            "get": {
                "tags": [
                    "template"
                ],
                "description": "Returns the collection of type template",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "createdBy",
                                "-createdBy",
                                "description",
                                "-description",
                                "name",
                                "-name",
                                "tcl",
                                "-tcl",
                                "updatedBy",
                                "-updatedBy",
                                "version",
                                "-version",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[template]",
                        "in": "query",
                        "description": "Selects the set of template fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "createdBy",
                                "createdDate",
                                "description",
                                "name",
                                "tcl",
                                "updatedBy",
                                "updatedDate",
                                "version",
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[template]",
                        "in": "query",
                        "description": "Filters the collection of template using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filters the collection of template using a 'joined' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/template"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "template"
                ],
                "description": "Creates an item of type template",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "template",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/template"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/template"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/template/{templateId}": {
            "get": {
                "tags": [
                    "template"
                ],
                "description": "Returns an instance of type template",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[template]",
                        "in": "query",
                        "description": "Selects the set of template fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "createdBy",
                                "createdDate",
                                "description",
                                "name",
                                "tcl",
                                "updatedBy",
                                "updatedDate",
                                "version",
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/template"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "template"
                ],
                "description": "Deletes an instance of type template",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "template"
                ],
                "description": "Modifies an instance of type template",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "template",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/template"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "templateId",
                    "in": "path",
                    "description": "template Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/step": {
            "get": {
                "tags": [
                    "step"
                ],
                "description": "Returns the collection of type step",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "name",
                                "-name",
                                "output",
                                "-output",
                                "stepNumber",
                                "-stepNumber",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[step]",
                        "in": "query",
                        "description": "Selects the set of step fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "name",
                                "output",
                                "status",
                                "stepNumber",
                                "job"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "job"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[step]",
                        "in": "query",
                        "description": "Filters the collection of step using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filters the collection of step using a 'joined' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/step"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "step"
                ],
                "description": "Creates an item of type step",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "step",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/step"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/step"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/step/{stepId}": {
            "get": {
                "tags": [
                    "step"
                ],
                "description": "Returns an instance of type step",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[step]",
                        "in": "query",
                        "description": "Selects the set of step fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "name",
                                "output",
                                "status",
                                "stepNumber",
                                "job"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "job"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/step"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "step"
                ],
                "description": "Deletes an instance of type step",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "step"
                ],
                "description": "Modifies an instance of type step",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "step",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/step"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "stepId",
                    "in": "path",
                    "description": "step Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/job": {
            "get": {
                "tags": [
                    "job"
                ],
                "description": "Returns the relationship job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "approvalTeam",
                                "-approvalTeam",
                                "comments",
                                "-comments",
                                "createdBy",
                                "-createdBy",
                                "output",
                                "-output",
                                "tcl",
                                "-tcl",
                                "templateReference",
                                "-templateReference",
                                "terraformPlan",
                                "-terraformPlan",
                                "updatedBy",
                                "-updatedBy",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[job]",
                        "in": "query",
                        "description": "Selects the set of job fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "approvalTeam",
                                "comments",
                                "createdBy",
                                "createdDate",
                                "output",
                                "status",
                                "tcl",
                                "templateReference",
                                "terraformPlan",
                                "updatedBy",
                                "updatedDate",
                                "organization",
                                "step",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization",
                                "step",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[job]",
                        "in": "query",
                        "description": "Filters the collection of job using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/job"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "job"
                ],
                "description": "Creates an item of type job and adds it to job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "job",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/job"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/job"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/job/{jobId}": {
            "get": {
                "tags": [
                    "job"
                ],
                "description": "Returns an instance of type job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[job]",
                        "in": "query",
                        "description": "Selects the set of job fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "approvalTeam",
                                "comments",
                                "createdBy",
                                "createdDate",
                                "output",
                                "status",
                                "tcl",
                                "templateReference",
                                "terraformPlan",
                                "updatedBy",
                                "updatedDate",
                                "organization",
                                "step",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization",
                                "step",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/job"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "job"
                ],
                "description": "Deletes an instance of type job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "job"
                ],
                "description": "Modifies an instance of type job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "job",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/job"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "jobId",
                    "in": "path",
                    "description": "job Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/relationships/job": {
            "get": {
                "tags": [
                    "job"
                ],
                "description": "Returns the relationship identifiers for job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "filter[job]",
                        "in": "query",
                        "description": "Filters the collection of job using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "job"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "job"
                ],
                "description": "Adds items to the relationship job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "job"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "job"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "job"
                ],
                "description": "Deletes items from the relationship job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "job"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "job"
                ],
                "description": "Replaces the relationship job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "job"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization": {
            "get": {
                "tags": [
                    "organization"
                ],
                "description": "Returns the collection of type organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "description",
                                "-description",
                                "disabled",
                                "-disabled",
                                "name",
                                "-name",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[organization]",
                        "in": "query",
                        "description": "Selects the set of organization fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "description",
                                "disabled",
                                "name",
                                "globalvar",
                                "job",
                                "module",
                                "provider",
                                "team",
                                "template",
                                "vcs",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "globalvar",
                                "job",
                                "module",
                                "provider",
                                "team",
                                "template",
                                "vcs",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[organization]",
                        "in": "query",
                        "description": "Filters the collection of organization using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filters the collection of organization using a 'joined' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/organization"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "organization"
                ],
                "description": "Creates an item of type organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "organization",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/organization"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/organization"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/organization/{organizationId}": {
            "get": {
                "tags": [
                    "organization"
                ],
                "description": "Returns an instance of type organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[organization]",
                        "in": "query",
                        "description": "Selects the set of organization fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "description",
                                "disabled",
                                "name",
                                "globalvar",
                                "job",
                                "module",
                                "provider",
                                "team",
                                "template",
                                "vcs",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "globalvar",
                                "job",
                                "module",
                                "provider",
                                "team",
                                "template",
                                "vcs",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/organization"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "organization"
                ],
                "description": "Deletes an instance of type organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "organization"
                ],
                "description": "Modifies an instance of type organization",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "organization",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/organization"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/schedule": {
            "get": {
                "tags": [
                    "schedule"
                ],
                "description": "Returns the relationship schedule",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "createdBy",
                                "-createdBy",
                                "cron",
                                "-cron",
                                "description",
                                "-description",
                                "enabled",
                                "-enabled",
                                "tcl",
                                "-tcl",
                                "templateReference",
                                "-templateReference",
                                "updatedBy",
                                "-updatedBy",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[schedule]",
                        "in": "query",
                        "description": "Selects the set of schedule fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "createdBy",
                                "createdDate",
                                "cron",
                                "description",
                                "enabled",
                                "tcl",
                                "templateReference",
                                "updatedBy",
                                "updatedDate",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[schedule]",
                        "in": "query",
                        "description": "Filters the collection of schedule using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/schedule"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "schedule"
                ],
                "description": "Creates an item of type schedule and adds it to schedule",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "schedule",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/schedule"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/schedule"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/schedule/{scheduleId}": {
            "get": {
                "tags": [
                    "schedule"
                ],
                "description": "Returns an instance of type schedule",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[schedule]",
                        "in": "query",
                        "description": "Selects the set of schedule fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "createdBy",
                                "createdDate",
                                "cron",
                                "description",
                                "enabled",
                                "tcl",
                                "templateReference",
                                "updatedBy",
                                "updatedDate",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/schedule"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "schedule"
                ],
                "description": "Deletes an instance of type schedule",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "schedule"
                ],
                "description": "Modifies an instance of type schedule",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "schedule",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/schedule"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "scheduleId",
                    "in": "path",
                    "description": "schedule Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/relationships/schedule": {
            "get": {
                "tags": [
                    "schedule"
                ],
                "description": "Returns the relationship identifiers for schedule",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "filter[schedule]",
                        "in": "query",
                        "description": "Filters the collection of schedule using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "schedule"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "schedule"
                ],
                "description": "Adds items to the relationship schedule",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "schedule"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "schedule"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "schedule"
                ],
                "description": "Deletes items from the relationship schedule",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "schedule"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "schedule"
                ],
                "description": "Replaces the relationship schedule",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "schedule"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/team": {
            "get": {
                "tags": [
                    "team"
                ],
                "description": "Returns the relationship team",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "manageModule",
                                "-manageModule",
                                "manageProvider",
                                "-manageProvider",
                                "manageTemplate",
                                "-manageTemplate",
                                "manageVcs",
                                "-manageVcs",
                                "manageWorkspace",
                                "-manageWorkspace",
                                "name",
                                "-name",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[team]",
                        "in": "query",
                        "description": "Selects the set of team fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "manageModule",
                                "manageProvider",
                                "manageTemplate",
                                "manageVcs",
                                "manageWorkspace",
                                "name",
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[team]",
                        "in": "query",
                        "description": "Filters the collection of team using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/team"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "team"
                ],
                "description": "Creates an item of type team and adds it to team",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "team",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/team"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/team"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/team/{teamId}": {
            "get": {
                "tags": [
                    "team"
                ],
                "description": "Returns an instance of type team",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[team]",
                        "in": "query",
                        "description": "Selects the set of team fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "manageModule",
                                "manageProvider",
                                "manageTemplate",
                                "manageVcs",
                                "manageWorkspace",
                                "name",
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/team"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "team"
                ],
                "description": "Deletes an instance of type team",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "team"
                ],
                "description": "Modifies an instance of type team",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "team",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/team"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "teamId",
                    "in": "path",
                    "description": "team Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/relationships/team": {
            "get": {
                "tags": [
                    "team"
                ],
                "description": "Returns the relationship identifiers for team",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "filter[team]",
                        "in": "query",
                        "description": "Filters the collection of team using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "team"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "team"
                ],
                "description": "Adds items to the relationship team",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "team"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "team"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "team"
                ],
                "description": "Deletes items from the relationship team",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "team"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "team"
                ],
                "description": "Replaces the relationship team",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "team"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/module": {
            "get": {
                "tags": [
                    "module"
                ],
                "description": "Returns the relationship module",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "createdBy",
                                "-createdBy",
                                "description",
                                "-description",
                                "downloadQuantity",
                                "-downloadQuantity",
                                "name",
                                "-name",
                                "provider",
                                "-provider",
                                "registryPath",
                                "-registryPath",
                                "source",
                                "-source",
                                "updatedBy",
                                "-updatedBy",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[module]",
                        "in": "query",
                        "description": "Selects the set of module fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "createdBy",
                                "createdDate",
                                "description",
                                "downloadQuantity",
                                "name",
                                "provider",
                                "registryPath",
                                "source",
                                "updatedBy",
                                "updatedDate",
                                "versions",
                                "organization",
                                "vcs"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization",
                                "vcs"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[module]",
                        "in": "query",
                        "description": "Filters the collection of module using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/module"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "module"
                ],
                "description": "Creates an item of type module and adds it to module",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "module",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/module"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/module"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/module/{moduleId}": {
            "get": {
                "tags": [
                    "module"
                ],
                "description": "Returns an instance of type module",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[module]",
                        "in": "query",
                        "description": "Selects the set of module fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "createdBy",
                                "createdDate",
                                "description",
                                "downloadQuantity",
                                "name",
                                "provider",
                                "registryPath",
                                "source",
                                "updatedBy",
                                "updatedDate",
                                "versions",
                                "organization",
                                "vcs"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization",
                                "vcs"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/module"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "module"
                ],
                "description": "Deletes an instance of type module",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "module"
                ],
                "description": "Modifies an instance of type module",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "module",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/module"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "moduleId",
                    "in": "path",
                    "description": "module Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/relationships/module": {
            "get": {
                "tags": [
                    "module"
                ],
                "description": "Returns the relationship identifiers for module",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "filter[module]",
                        "in": "query",
                        "description": "Filters the collection of module using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "module"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "module"
                ],
                "description": "Adds items to the relationship module",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "module"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "module"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "module"
                ],
                "description": "Deletes items from the relationship module",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "module"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "module"
                ],
                "description": "Replaces the relationship module",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "module"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/globalvar": {
            "get": {
                "tags": [
                    "globalvar"
                ],
                "description": "Returns the relationship globalvar",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "description",
                                "-description",
                                "hcl",
                                "-hcl",
                                "key",
                                "-key",
                                "sensitive",
                                "-sensitive",
                                "value",
                                "-value",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[globalvar]",
                        "in": "query",
                        "description": "Selects the set of globalvar fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "category",
                                "description",
                                "hcl",
                                "key",
                                "sensitive",
                                "value",
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[globalvar]",
                        "in": "query",
                        "description": "Filters the collection of globalvar using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/globalvar"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "globalvar"
                ],
                "description": "Creates an item of type globalvar and adds it to globalvar",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "globalvar",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/globalvar"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/globalvar"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/globalvar/{globalvarId}": {
            "get": {
                "tags": [
                    "globalvar"
                ],
                "description": "Returns an instance of type globalvar",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[globalvar]",
                        "in": "query",
                        "description": "Selects the set of globalvar fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "category",
                                "description",
                                "hcl",
                                "key",
                                "sensitive",
                                "value",
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/globalvar"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "globalvar"
                ],
                "description": "Deletes an instance of type globalvar",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "globalvar"
                ],
                "description": "Modifies an instance of type globalvar",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "globalvar",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/globalvar"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "globalvarId",
                    "in": "path",
                    "description": "globalvar Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/relationships/globalvar": {
            "get": {
                "tags": [
                    "globalvar"
                ],
                "description": "Returns the relationship identifiers for globalvar",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "filter[globalvar]",
                        "in": "query",
                        "description": "Filters the collection of globalvar using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "globalvar"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "globalvar"
                ],
                "description": "Adds items to the relationship globalvar",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "globalvar"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "globalvar"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "globalvar"
                ],
                "description": "Deletes items from the relationship globalvar",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "globalvar"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "globalvar"
                ],
                "description": "Replaces the relationship globalvar",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "globalvar"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/step/{stepId}/job": {
            "get": {
                "tags": [
                    "job"
                ],
                "description": "Returns the relationship job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "approvalTeam",
                                "-approvalTeam",
                                "comments",
                                "-comments",
                                "createdBy",
                                "-createdBy",
                                "output",
                                "-output",
                                "tcl",
                                "-tcl",
                                "templateReference",
                                "-templateReference",
                                "terraformPlan",
                                "-terraformPlan",
                                "updatedBy",
                                "-updatedBy",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[job]",
                        "in": "query",
                        "description": "Selects the set of job fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "approvalTeam",
                                "comments",
                                "createdBy",
                                "createdDate",
                                "output",
                                "status",
                                "tcl",
                                "templateReference",
                                "terraformPlan",
                                "updatedBy",
                                "updatedDate",
                                "organization",
                                "step",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization",
                                "step",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[job]",
                        "in": "query",
                        "description": "Filters the collection of job using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/job"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "job"
                ],
                "description": "Creates an item of type job and adds it to job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "job",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/job"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/job"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "stepId",
                    "in": "path",
                    "description": "step Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/step/{stepId}/job/{jobId}": {
            "get": {
                "tags": [
                    "job"
                ],
                "description": "Returns an instance of type job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[job]",
                        "in": "query",
                        "description": "Selects the set of job fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "approvalTeam",
                                "comments",
                                "createdBy",
                                "createdDate",
                                "output",
                                "status",
                                "tcl",
                                "templateReference",
                                "terraformPlan",
                                "updatedBy",
                                "updatedDate",
                                "organization",
                                "step",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization",
                                "step",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/job"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "job"
                ],
                "description": "Deletes an instance of type job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "job"
                ],
                "description": "Modifies an instance of type job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "job",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/job"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "stepId",
                    "in": "path",
                    "description": "step Identifier",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "jobId",
                    "in": "path",
                    "description": "job Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/step/{stepId}/relationships/job": {
            "get": {
                "tags": [
                    "job"
                ],
                "description": "Returns the relationship identifiers for job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "filter[job]",
                        "in": "query",
                        "description": "Filters the collection of job using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "job"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "job"
                ],
                "description": "Replaces the relationship job",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "job"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "stepId",
                    "in": "path",
                    "description": "step Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/vcs": {
            "get": {
                "tags": [
                    "vcs"
                ],
                "description": "Returns the relationship vcs",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "clientId",
                                "-clientId",
                                "clientSecret",
                                "-clientSecret",
                                "createdBy",
                                "-createdBy",
                                "description",
                                "-description",
                                "name",
                                "-name",
                                "updatedBy",
                                "-updatedBy",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[vcs]",
                        "in": "query",
                        "description": "Selects the set of vcs fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "clientId",
                                "clientSecret",
                                "createdBy",
                                "createdDate",
                                "description",
                                "name",
                                "status",
                                "updatedBy",
                                "updatedDate",
                                "vcsType",
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[vcs]",
                        "in": "query",
                        "description": "Filters the collection of vcs using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/vcs"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "vcs"
                ],
                "description": "Creates an item of type vcs and adds it to vcs",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vcs",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/vcs"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/vcs"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/vcs/{vcsId}": {
            "get": {
                "tags": [
                    "vcs"
                ],
                "description": "Returns an instance of type vcs",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[vcs]",
                        "in": "query",
                        "description": "Selects the set of vcs fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "clientId",
                                "clientSecret",
                                "createdBy",
                                "createdDate",
                                "description",
                                "name",
                                "status",
                                "updatedBy",
                                "updatedDate",
                                "vcsType",
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "organization"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/vcs"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "vcs"
                ],
                "description": "Deletes an instance of type vcs",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "vcs"
                ],
                "description": "Modifies an instance of type vcs",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "vcs",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/vcs"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "vcsId",
                    "in": "path",
                    "description": "vcs Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/organization/{organizationId}/relationships/vcs": {
            "get": {
                "tags": [
                    "vcs"
                ],
                "description": "Returns the relationship identifiers for vcs",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "filter[vcs]",
                        "in": "query",
                        "description": "Filters the collection of vcs using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "vcs"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "vcs"
                ],
                "description": "Adds items to the relationship vcs",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "vcs"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "vcs"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "vcs"
                ],
                "description": "Deletes items from the relationship vcs",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "vcs"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "vcs"
                ],
                "description": "Replaces the relationship vcs",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "vcs"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "organizationId",
                    "in": "path",
                    "description": "organization Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/history": {
            "get": {
                "tags": [
                    "history"
                ],
                "description": "Returns the relationship history",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "createdBy",
                                "-createdBy",
                                "jobReference",
                                "-jobReference",
                                "output",
                                "-output",
                                "updatedBy",
                                "-updatedBy",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[history]",
                        "in": "query",
                        "description": "Selects the set of history fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "createdBy",
                                "createdDate",
                                "jobReference",
                                "output",
                                "updatedBy",
                                "updatedDate",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[history]",
                        "in": "query",
                        "description": "Filters the collection of history using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/history"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "history"
                ],
                "description": "Creates an item of type history and adds it to history",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "history",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/history"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/history"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/history/{historyId}": {
            "get": {
                "tags": [
                    "history"
                ],
                "description": "Returns an instance of type history",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[history]",
                        "in": "query",
                        "description": "Selects the set of history fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "createdBy",
                                "createdDate",
                                "jobReference",
                                "output",
                                "updatedBy",
                                "updatedDate",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/history"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "history"
                ],
                "description": "Deletes an instance of type history",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "history"
                ],
                "description": "Modifies an instance of type history",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "history",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/history"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "historyId",
                    "in": "path",
                    "description": "history Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/relationships/history": {
            "get": {
                "tags": [
                    "history"
                ],
                "description": "Returns the relationship identifiers for history",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "filter[history]",
                        "in": "query",
                        "description": "Filters the collection of history using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "history"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "history"
                ],
                "description": "Adds items to the relationship history",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "history"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "history"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "history"
                ],
                "description": "Deletes items from the relationship history",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "history"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "history"
                ],
                "description": "Replaces the relationship history",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "history"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/variable": {
            "get": {
                "tags": [
                    "variable"
                ],
                "description": "Returns the relationship variable",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorts the collection on the selected attributes.  A prefix of '-' sorts descending",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "description",
                                "-description",
                                "hcl",
                                "-hcl",
                                "key",
                                "-key",
                                "sensitive",
                                "-sensitive",
                                "value",
                                "-value",
                                "id",
                                "-id"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "fields[variable]",
                        "in": "query",
                        "description": "Selects the set of variable fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "category",
                                "description",
                                "hcl",
                                "key",
                                "sensitive",
                                "value",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "filter[variable]",
                        "in": "query",
                        "description": "Filters the collection of variable using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/variable"
                                    }
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "variable"
                ],
                "description": "Creates an item of type variable and adds it to variable",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "variable",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/variable"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/variable"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/variable/{variableId}": {
            "get": {
                "tags": [
                    "variable"
                ],
                "description": "Returns an instance of type variable",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "fields[variable]",
                        "in": "query",
                        "description": "Selects the set of variable fields that should be returned in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "category",
                                "description",
                                "hcl",
                                "key",
                                "sensitive",
                                "value",
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Selects the set of relationships that should be expanded as a compound document in the result.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "workspace"
                            ]
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/variable"
                                },
                                "included": {
                                    "type": "array",
                                    "description": "Included resources",
                                    "uniqueItems": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "attributes": {
                                                "type": "object"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "relationships": {
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "variable"
                ],
                "description": "Deletes an instance of type variable",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "variable"
                ],
                "description": "Modifies an instance of type variable",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "variable",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/variable"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "variableId",
                    "in": "path",
                    "description": "variable Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workspace/{workspaceId}/relationships/variable": {
            "get": {
                "tags": [
                    "variable"
                ],
                "description": "Returns the relationship identifiers for variable",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "name": "filter[variable]",
                        "in": "query",
                        "description": "Filters the collection of variable using a 'disjoint' RSQL expression",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page[number]",
                        "in": "query",
                        "description": "Number of pages to return.  Can be used with page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[size]",
                        "in": "query",
                        "description": "Number of elements per page.  Can be used with page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[offset]",
                        "in": "query",
                        "description": "Offset from 0 to start paginating.  Can be used with page[limit]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[limit]",
                        "in": "query",
                        "description": "Maximum number of items to return.  Can be used with page[offset]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page[totals]",
                        "in": "query",
                        "description": "For requesting total pages/records be included in the response page meta data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "variable"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "variable"
                ],
                "description": "Adds items to the relationship variable",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "variable"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "variable"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "variable"
                ],
                "description": "Deletes items from the relationship variable",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "variable"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "patch": {
                "tags": [
                    "variable"
                ],
                "description": "Replaces the relationship variable",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "relationship",
                        "required": false,
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "variable"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    }
                }
            },
            "parameters": [
                {
                    "name": "workspaceId",
                    "in": "path",
                    "description": "workspace Identifier",
                    "required": true,
                    "type": "string"
                }
            ]
        }
    },
    "definitions": {
        "template": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Create Permissions : (team manage template)\nDelete Permissions : (team manage template)"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "createdBy": {
                            "type": "string",
                            "description": "Read Permissions : (team view template)\nUpdate Permissions : (team manage template)"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Read Permissions : (team view template)\nUpdate Permissions : (team manage template)"
                        },
                        "description": {
                            "type": "string",
                            "description": "Read Permissions : (team view template)\nUpdate Permissions : (team manage template)"
                        },
                        "name": {
                            "type": "string",
                            "description": "Read Permissions : (team view template)\nUpdate Permissions : (team manage template)"
                        },
                        "tcl": {
                            "type": "string",
                            "description": "Read Permissions : (team view template)\nUpdate Permissions : (team manage template)"
                        },
                        "updatedBy": {
                            "type": "string",
                            "description": "Read Permissions : (team view template)\nUpdate Permissions : (team manage template)"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Read Permissions : (team view template)\nUpdate Permissions : (team manage template)"
                        },
                        "version": {
                            "type": "string",
                            "description": "Read Permissions : (team view template)\nUpdate Permissions : (team manage template)"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "organization": {
                            "type": "object",
                            "description": "Read Permissions : (team view template)\nUpdate Permissions : (team manage template)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "organization"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "workspace": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Create Permissions : (team manage workspace)\nDelete Permissions : (team manage workspace)"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "branch": {
                            "type": "string",
                            "description": "Read Permissions : (team view workspace)\nUpdate Permissions : (team manage workspace)"
                        },
                        "description": {
                            "type": "string",
                            "description": "Read Permissions : (team view workspace)\nUpdate Permissions : (team manage workspace)"
                        },
                        "name": {
                            "type": "string",
                            "description": "Read Permissions : (team view workspace)\nUpdate Permissions : (team manage workspace)"
                        },
                        "source": {
                            "type": "string",
                            "description": "Read Permissions : (team view workspace)\nUpdate Permissions : (team manage workspace)"
                        },
                        "terraformVersion": {
                            "type": "string",
                            "description": "Read Permissions : (team view workspace)\nUpdate Permissions : (team manage workspace)"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "history": {
                            "type": "object",
                            "description": "Read Permissions : (team view workspace)\nUpdate Permissions : (user is a super service)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "history"
                                    ]
                                }
                            }
                        },
                        "job": {
                            "type": "object",
                            "description": "Read Permissions : (team view workspace)\nUpdate Permissions : (team manage workspace)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "job"
                                    ]
                                }
                            }
                        },
                        "organization": {
                            "type": "object",
                            "description": "Read Permissions : (team view workspace)\nUpdate Permissions : (team manage workspace)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "organization"
                                    ]
                                }
                            }
                        },
                        "schedule": {
                            "type": "object",
                            "description": "Read Permissions : (team view workspace)\nUpdate Permissions : (team manage workspace)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "schedule"
                                    ]
                                }
                            }
                        },
                        "variable": {
                            "type": "object",
                            "description": "Read Permissions : (team view workspace)\nUpdate Permissions : (team manage workspace)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "variable"
                                    ]
                                }
                            }
                        },
                        "vcs": {
                            "type": "object",
                            "description": "Read Permissions : (team view workspace)\nUpdate Permissions : (team manage workspace)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "vcs"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "vcs": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Create Permissions : (team manage vcs)\nDelete Permissions : (team manage vcs)"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "clientId": {
                            "type": "string",
                            "description": "Read Permissions : (team view vcs)\nUpdate Permissions : (team manage vcs)"
                        },
                        "clientSecret": {
                            "type": "string",
                            "description": "Read Permissions : (read vcs secret)\nUpdate Permissions : (team manage vcs)"
                        },
                        "createdBy": {
                            "type": "string",
                            "description": "Read Permissions : (team view vcs)\nUpdate Permissions : (team manage vcs)"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Read Permissions : (team view vcs)\nUpdate Permissions : (team manage vcs)"
                        },
                        "description": {
                            "type": "string",
                            "description": "Read Permissions : (team view vcs)\nUpdate Permissions : (team manage vcs)"
                        },
                        "name": {
                            "type": "string",
                            "description": "Read Permissions : (team view vcs)\nUpdate Permissions : (team manage vcs)"
                        },
                        "status": {
                            "type": "string",
                            "description": "Read Permissions : (team view vcs)\nUpdate Permissions : (user is a super service)",
                            "enum": [
                                "PENDING",
                                "COMPLETED",
                                "ERROR"
                            ]
                        },
                        "updatedBy": {
                            "type": "string",
                            "description": "Read Permissions : (team view vcs)\nUpdate Permissions : (team manage vcs)"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Read Permissions : (team view vcs)\nUpdate Permissions : (team manage vcs)"
                        },
                        "vcsType": {
                            "type": "string",
                            "description": "Read Permissions : (team view vcs)\nUpdate Permissions : (team manage vcs)",
                            "enum": [
                                "GITHUB",
                                "GITLAB",
                                "BITBUCKET",
                                "AZURE_DEVOPS",
                                "PUBLIC"
                            ]
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "organization": {
                            "type": "object",
                            "description": "Read Permissions : (team view vcs)\nUpdate Permissions : (team manage vcs)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "organization"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "implementation": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": ""
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "arch": {
                            "type": "string"
                        },
                        "asciiArmor": {
                            "type": "string"
                        },
                        "downloadUrl": {
                            "type": "string"
                        },
                        "filename": {
                            "type": "string"
                        },
                        "keyId": {
                            "type": "string"
                        },
                        "os": {
                            "type": "string"
                        },
                        "shasum": {
                            "type": "string"
                        },
                        "shasumsSignatureUrl": {
                            "type": "string"
                        },
                        "shasumsUrl": {
                            "type": "string"
                        },
                        "source": {
                            "type": "string"
                        },
                        "sourceUrl": {
                            "type": "string"
                        },
                        "trustSignature": {
                            "type": "string"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "version"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "module": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Create Permissions : (team manage module)\nDelete Permissions : (team manage module)"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "createdBy": {
                            "type": "string",
                            "description": "Read Permissions : (team view module)\nUpdate Permissions : (team manage module OR user is a super service)"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Read Permissions : (team view module)\nUpdate Permissions : (team manage module OR user is a super service)"
                        },
                        "description": {
                            "type": "string",
                            "description": "Read Permissions : (team view module)\nUpdate Permissions : (team manage module OR user is a super service)"
                        },
                        "downloadQuantity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Read Permissions : (team view module)\nUpdate Permissions : (team manage module OR user is a super service)"
                        },
                        "name": {
                            "type": "string",
                            "description": "Read Permissions : (team view module)\nUpdate Permissions : (team manage module OR user is a super service)"
                        },
                        "provider": {
                            "type": "string",
                            "description": "Read Permissions : (team view module)\nUpdate Permissions : (team manage module OR user is a super service)"
                        },
                        "registryPath": {
                            "type": "string",
                            "description": "Read Permissions : (team view module)\nUpdate Permissions : (team manage module OR user is a super service)"
                        },
                        "source": {
                            "type": "string",
                            "description": "Read Permissions : (team view module)\nUpdate Permissions : (team manage module OR user is a super service)"
                        },
                        "updatedBy": {
                            "type": "string",
                            "description": "Read Permissions : (team view module)\nUpdate Permissions : (team manage module OR user is a super service)"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Read Permissions : (team view module)\nUpdate Permissions : (team manage module OR user is a super service)"
                        },
                        "versions": {
                            "type": "array",
                            "description": "Read Permissions : (team view module)\nUpdate Permissions : (team manage module OR user is a super service)",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "organization": {
                            "type": "object",
                            "description": "Read Permissions : (team view module)\nUpdate Permissions : (team manage module OR user is a super service)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "organization"
                                    ]
                                }
                            }
                        },
                        "vcs": {
                            "type": "object",
                            "description": "Read Permissions : (team view module)\nUpdate Permissions : (team manage module OR user is a super service)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "vcs"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "team": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Create Permissions : (user is a superuser)\nDelete Permissions : (user is a superuser)"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "manageModule": {
                            "type": "boolean",
                            "description": "Update Permissions : (user is a superuser)"
                        },
                        "manageProvider": {
                            "type": "boolean",
                            "description": "Update Permissions : (user is a superuser)"
                        },
                        "manageTemplate": {
                            "type": "boolean",
                            "description": "Update Permissions : (user is a superuser)"
                        },
                        "manageVcs": {
                            "type": "boolean",
                            "description": "Update Permissions : (user is a superuser)"
                        },
                        "manageWorkspace": {
                            "type": "boolean",
                            "description": "Update Permissions : (user is a superuser)"
                        },
                        "name": {
                            "type": "string",
                            "description": "Update Permissions : (user is a superuser)"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "organization": {
                            "type": "object",
                            "description": "Update Permissions : (user is a superuser)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "organization"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "history": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": ""
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "jobReference": {
                            "type": "string"
                        },
                        "output": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "workspace": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "workspace"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "version": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": ""
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "protocols": {
                            "type": "string"
                        },
                        "versionNumber": {
                            "type": "string"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "implementation": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "implementation"
                                    ]
                                }
                            }
                        },
                        "provider": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "provider"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "schedule": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": ""
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "cron": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "tcl": {
                            "type": "string"
                        },
                        "templateReference": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "workspace": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "workspace"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "provider": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Create Permissions : (team manage provider)\nDelete Permissions : (team manage provider)"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "description": {
                            "type": "string",
                            "description": "Read Permissions : (team view provider)\nUpdate Permissions : (team manage provider)"
                        },
                        "name": {
                            "type": "string",
                            "description": "Read Permissions : (team view provider)\nUpdate Permissions : (team manage provider)"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "organization": {
                            "type": "object",
                            "description": "Read Permissions : (team view provider)\nUpdate Permissions : (team manage provider)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "organization"
                                    ]
                                }
                            }
                        },
                        "version": {
                            "type": "object",
                            "description": "Read Permissions : (team view provider)\nUpdate Permissions : (team manage provider)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "version"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "organization": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Create Permissions : (user is a superuser)\nDelete Permissions : (user is a superuser)"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "description": {
                            "type": "string",
                            "description": "Read Permissions : (user belongs organization)\nUpdate Permissions : (user is a superuser )"
                        },
                        "disabled": {
                            "type": "boolean",
                            "description": "Read Permissions : (user belongs organization)\nUpdate Permissions : (user is a superuser )"
                        },
                        "name": {
                            "type": "string",
                            "description": "Read Permissions : (user belongs organization)\nUpdate Permissions : (user is a superuser )"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "globalvar": {
                            "type": "object",
                            "description": "Read Permissions : (user belongs organization)\nUpdate Permissions : (user is a superuser )",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "globalvar"
                                    ]
                                }
                            }
                        },
                        "job": {
                            "type": "object",
                            "description": "Read Permissions : (user belongs organization)\nUpdate Permissions : (user belongs organization)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "job"
                                    ]
                                }
                            }
                        },
                        "module": {
                            "type": "object",
                            "description": "Read Permissions : (user belongs organization)\nUpdate Permissions : (user belongs organization)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "module"
                                    ]
                                }
                            }
                        },
                        "provider": {
                            "type": "object",
                            "description": "Read Permissions : (user belongs organization)\nUpdate Permissions : (user belongs organization)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "provider"
                                    ]
                                }
                            }
                        },
                        "team": {
                            "type": "object",
                            "description": "Read Permissions : (user belongs organization)\nUpdate Permissions : (user is a superuser )",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "team"
                                    ]
                                }
                            }
                        },
                        "template": {
                            "type": "object",
                            "description": "Read Permissions : (user belongs organization)\nUpdate Permissions : (user belongs organization)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "template"
                                    ]
                                }
                            }
                        },
                        "vcs": {
                            "type": "object",
                            "description": "Read Permissions : (user belongs organization)\nUpdate Permissions : (user belongs organization)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "vcs"
                                    ]
                                }
                            }
                        },
                        "workspace": {
                            "type": "object",
                            "description": "Read Permissions : (user belongs organization)\nUpdate Permissions : (user belongs organization)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "workspace"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "variable": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": ""
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "category": {
                            "type": "string",
                            "enum": [
                                "TERRAFORM",
                                "ENV"
                            ]
                        },
                        "description": {
                            "type": "string"
                        },
                        "hcl": {
                            "type": "boolean"
                        },
                        "key": {
                            "type": "string"
                        },
                        "sensitive": {
                            "type": "boolean"
                        },
                        "value": {
                            "type": "string",
                            "description": "Read Permissions : (user read secret)"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "workspace": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "workspace"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "step": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": ""
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "output": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "waitingApproval",
                                "approved",
                                "queue",
                                "running",
                                "completed",
                                "rejected",
                                "cancelled"
                            ]
                        },
                        "stepNumber": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "job": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "job"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "globalvar": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Create Permissions : (user is a superuser)\nDelete Permissions : (user is a superuser)"
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "category": {
                            "type": "string",
                            "description": "Update Permissions : (user is a superuser)",
                            "enum": [
                                "TERRAFORM",
                                "ENV"
                            ]
                        },
                        "description": {
                            "type": "string",
                            "description": "Update Permissions : (user is a superuser)"
                        },
                        "hcl": {
                            "type": "boolean",
                            "description": "Update Permissions : (user is a superuser)"
                        },
                        "key": {
                            "type": "string",
                            "description": "Update Permissions : (user is a superuser)"
                        },
                        "sensitive": {
                            "type": "boolean",
                            "description": "Update Permissions : (admin update secret)"
                        },
                        "value": {
                            "type": "string",
                            "description": "Read Permissions : (admin read secret)\nUpdate Permissions : (user is a superuser)"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "organization": {
                            "type": "object",
                            "description": "Update Permissions : (user is a superuser)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "organization"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "job": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": ""
                },
                "id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "approvalTeam": {
                            "type": "string",
                            "description": "Update Permissions : (user is a super service)"
                        },
                        "comments": {
                            "type": "string"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "output": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string",
                            "description": "Update Permissions : (team approve job OR user is a super service)",
                            "enum": [
                                "pending",
                                "waitingApproval",
                                "approved",
                                "queue",
                                "running",
                                "completed",
                                "rejected",
                                "cancelled"
                            ]
                        },
                        "tcl": {
                            "type": "string"
                        },
                        "templateReference": {
                            "type": "string"
                        },
                        "terraformPlan": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "organization": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "organization"
                                    ]
                                }
                            }
                        },
                        "step": {
                            "type": "object",
                            "description": "Update Permissions : (user is a super service)",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "step"
                                    ]
                                }
                            }
                        },
                        "workspace": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "workspace"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}